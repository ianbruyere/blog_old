# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-05-15 04:01
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_authorized', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField()),
                ('summary', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='mapMarkers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('address', models.CharField(default=None, max_length=80)),
                ('lat', models.DecimalField(decimal_places=6, default=None, max_digits=10)),
                ('lng', models.DecimalField(decimal_places=6, default=None, max_digits=10)),
                ('partOfTrip', models.IntegerField(default=0, null=True)),
                ('orderVisiting', models.IntegerField(default=0, null=True)),
                ('typeOfMarker', models.CharField(choices=[('Climbing', 'Climbing'), ('Entertainment', 'Entertainment'), ('Food', 'Food'), ('Meet-Up', 'Meet-Up')], default='Climbing', max_length=70)),
                ('description', models.TextField(default=None, max_length=1000, null=True)),
                ('confirmed', models.BooleanField(default=False)),
                ('date', models.DateField(default=None, null=True)),
                ('alreadyVisited', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='milesTraveled',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cumulativeMilesTraveled', models.DecimalField(decimal_places=2, max_digits=12)),
                ('checkInPointPlace', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2)),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('summary', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='photos/%Y/%m')),
                ('is_cover_photo', models.BooleanField()),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Album')),
            ],
        ),
        migrations.CreateModel(
            name='tripCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.CharField(choices=[('Gas', 'Gas'), ('Food', 'Food'), ('Entertainment', 'Entertainment'), ('Misc', 'Misc'), ('Camping', 'Camping')], default='Climbing', max_length=40)),
                ('state', models.CharField(max_length=2)),
                ('city', models.CharField(max_length=40)),
                ('month', models.CharField(default='May', max_length=40)),
            ],
        ),
    ]
